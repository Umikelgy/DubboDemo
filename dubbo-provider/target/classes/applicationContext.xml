<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:configurator="http://cocoon.apache.org/schema/configurator"
       xmlns:avalon="http://cocoon.apache.org/schema/avalon"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
                           http://cocoon.apache.org/schema/configurator http://cocoon.apache.org/schema/configurator/cocoon-configurator-1.0.1.xsd
                           http://code.alibabatech.com/schema/dubbo
                           http://code.alibabatech.com/schema/dubbo/dubbo.xsd
                           http://cocoon.apache.org/schema/avalon http://cocoon.apache.org/schema/avalon/cocoon-avalon-1.0.xsd"
       default-lazy-init="false">

    <!--提供方应用名称信息，这个相当于起一个名字，我们dubbo管理页面比较清晰是哪个应用暴露出来的 -->
    <dubbo:application name="dubbo-provider" owner="ding.lgy,while.lgy">
        <dubbo:parameter key="qos.enable" value="true"/>
        <dubbo:parameter key="qos.accept.foreign.ip" value="false"/>
        <dubbo:parameter key="qos.port" value="33333"/>
    </dubbo:application>
    <!--使用zookeeper注册中心暴露服务地址 -->
    <!--file指的是缓存文件路径，直接创建在工程里，如果启动后会形成缓存文件，切不能重复，否则会出现系统找不到路径问题-->
    <dubbo:registry address="zookeeper://127.0.0.1:2181" check="false" subscribe="false" register=""></dubbo:registry>
    <!--要暴露的服务接口 -->
    <dubbo:service interface="com.ITest"  ref="springservice" owner="ding.lgy,while.lgy"/>
    <bean id="springservice" class="com.impl.Test">
    </bean>
    <dubbo:service interface="com.ITest2" ref="itest2" />
    <bean id="itest2" class="com.impl.ITest2Impl"/>
    <dubbo:service interface="com.tApi.IUserService" ref="IUserService"/>
    <bean id="IUserService" class="com.impl.IUServiceImpl"/>
    <!--dubbo:service interface="com.alibaba.dubbo.rpc.service.GenericService" ref="genericService"/>
    <bean class="com.impl.GenericServiceImpl" id="genericService"/-->
</beans>